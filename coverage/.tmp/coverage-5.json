{
  "D:/RS school projects/react-ts-class-comp/src/components/search/search.tsx": {
    "path": "D:/RS school projects/react-ts-class-comp/src/components/search/search.tsx",
    "statementMap": {
      "0": {
        "start": { "line": 3, "column": 15 },
        "end": { "line": 26, "column": 1 }
      },
      "1": {
        "start": { "line": 4, "column": 28 },
        "end": { "line": 4, "column": 61 }
      },
      "2": {
        "start": { "line": 5, "column": 2 },
        "end": { "line": 25, "column": 11 }
      },
      "3": {
        "start": { "line": 11, "column": 27 },
        "end": { "line": 11, "column": 55 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 3, "column": 15 },
          "end": { "line": 3, "column": 16 }
        },
        "loc": {
          "start": { "line": 3, "column": 21 },
          "end": { "line": 26, "column": 1 }
        },
        "line": 3
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": { "line": 11, "column": 16 },
          "end": { "line": 11, "column": 17 }
        },
        "loc": {
          "start": { "line": 11, "column": 27 },
          "end": { "line": 11, "column": 55 }
        },
        "line": 11
      }
    },
    "branchMap": {},
    "s": { "0": 1, "1": 2, "2": 2, "3": 0 },
    "f": { "0": 2, "1": 0 },
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/components/search/search.tsx"
      ],
      "sourcesContent": [
        "import React from 'react';\nimport { useLocalStorage } from '@uidotdev/usehooks';\n\nconst Search: React.FC = () => {\n  const [value, setValue] = useLocalStorage('searchTerm', '');\n\n  return (\n    <div style={{margin: '20px'}}>\n      <input\n        type=\"text\"\n        placeholder=\"Search by ID or full name\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n"
      ],
      "mappings": "AAQM;AAPN,SAAS,uBAAuB;AAEhC,MAAM,SAAmB,MAAM;AAC7B,QAAM,CAAC,OAAO,QAAQ,IAAI,gBAAgB,cAAc,EAAE;AAE1D,SACE,uBAAC,SAAI,OAAO,EAAC,QAAQ,OAAM,GACzB;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,aAAY;AAAA,MACZ;AAAA,MACA,UAAU,CAAC,UAAU,SAAS,MAAM,OAAO,KAAK;AAAA;AAAA,IAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAEA,eAAe;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "66abf0bfa70e5eaca6e1fcedc80c65578f7278af"
  },
  "D:/RS school projects/react-ts-class-comp/src/components/pagination/pagination.tsx": {
    "path": "D:/RS school projects/react-ts-class-comp/src/components/pagination/pagination.tsx",
    "statementMap": {
      "0": {
        "start": { "line": 2, "column": 19 },
        "end": { "line": 54, "column": 1 }
      },
      "1": {
        "start": { "line": 3, "column": 2 },
        "end": { "line": 53, "column": 11 }
      },
      "2": {
        "start": { "line": 4, "column": 76 },
        "end": { "line": 4, "column": 93 }
      },
      "3": {
        "start": { "line": 9, "column": 76 },
        "end": { "line": 9, "column": 86 }
      },
      "4": {
        "start": { "line": 14, "column": 76 },
        "end": { "line": 14, "column": 86 }
      },
      "5": {
        "start": { "line": 19, "column": 76 },
        "end": { "line": 19, "column": 86 }
      },
      "6": {
        "start": { "line": 24, "column": 76 },
        "end": { "line": 24, "column": 86 }
      },
      "7": {
        "start": { "line": 29, "column": 76 },
        "end": { "line": 29, "column": 86 }
      },
      "8": {
        "start": { "line": 34, "column": 76 },
        "end": { "line": 34, "column": 86 }
      },
      "9": {
        "start": { "line": 39, "column": 76 },
        "end": { "line": 39, "column": 86 }
      },
      "10": {
        "start": { "line": 44, "column": 76 },
        "end": { "line": 44, "column": 93 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 2, "column": 19 },
          "end": { "line": 2, "column": 20 }
        },
        "loc": {
          "start": { "line": 2, "column": 42 },
          "end": { "line": 54, "column": 1 }
        },
        "line": 2
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": { "line": 4, "column": 70 },
          "end": { "line": 4, "column": 71 }
        },
        "loc": {
          "start": { "line": 4, "column": 76 },
          "end": { "line": 4, "column": 93 }
        },
        "line": 4
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": { "line": 9, "column": 70 },
          "end": { "line": 9, "column": 71 }
        },
        "loc": {
          "start": { "line": 9, "column": 76 },
          "end": { "line": 9, "column": 86 }
        },
        "line": 9
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": { "line": 14, "column": 70 },
          "end": { "line": 14, "column": 71 }
        },
        "loc": {
          "start": { "line": 14, "column": 76 },
          "end": { "line": 14, "column": 86 }
        },
        "line": 14
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": { "line": 19, "column": 70 },
          "end": { "line": 19, "column": 71 }
        },
        "loc": {
          "start": { "line": 19, "column": 76 },
          "end": { "line": 19, "column": 86 }
        },
        "line": 19
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": { "line": 24, "column": 70 },
          "end": { "line": 24, "column": 71 }
        },
        "loc": {
          "start": { "line": 24, "column": 76 },
          "end": { "line": 24, "column": 86 }
        },
        "line": 24
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": {
          "start": { "line": 29, "column": 70 },
          "end": { "line": 29, "column": 71 }
        },
        "loc": {
          "start": { "line": 29, "column": 76 },
          "end": { "line": 29, "column": 86 }
        },
        "line": 29
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": {
          "start": { "line": 34, "column": 70 },
          "end": { "line": 34, "column": 71 }
        },
        "loc": {
          "start": { "line": 34, "column": 76 },
          "end": { "line": 34, "column": 86 }
        },
        "line": 34
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": {
          "start": { "line": 39, "column": 70 },
          "end": { "line": 39, "column": 71 }
        },
        "loc": {
          "start": { "line": 39, "column": 76 },
          "end": { "line": 39, "column": 86 }
        },
        "line": 39
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": {
          "start": { "line": 44, "column": 70 },
          "end": { "line": 44, "column": 71 }
        },
        "loc": {
          "start": { "line": 44, "column": 76 },
          "end": { "line": 44, "column": 93 }
        },
        "line": 44
      }
    },
    "branchMap": {},
    "s": {
      "0": 1,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    "f": {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/components/pagination/pagination.tsx"
      ],
      "sourcesContent": [
        "import React from 'react';\n\ntype PaginationProps = {\n  page: number;\n  setPage: (page: number) => void;\n};\n\nconst Pagination: React.FC<PaginationProps> = ({ page, setPage }) => {\n  return (\n    <>\n      <button disabled={page === 1} onClick={() => setPage(page - 1)}>\n        prev page\n      </button>\n      <button disabled={page === 1} onClick={() => setPage(1)}>\n        1\n      </button>\n      <button disabled={page === 2} onClick={() => setPage(2)}>\n        2\n      </button>\n      <button disabled={page === 3} onClick={() => setPage(3)}>\n        3\n      </button>\n      <button disabled={page === 4} onClick={() => setPage(4)}>\n        4\n      </button>\n      <button disabled={page === 5} onClick={() => setPage(5)}>\n        5\n      </button>\n      <button disabled={page === 6} onClick={() => setPage(6)}>\n        6\n      </button>\n      <button disabled={page === 7} onClick={() => setPage(7)}>\n        7\n      </button>\n      <button disabled={page === 7} onClick={() => setPage(page + 1)}>\n        next page\n      </button>\n    </>\n  );\n};\n\nexport default Pagination;\n"
      ],
      "mappings": "AASI,mBACE,cADF;AAFJ,MAAM,aAAwC,CAAC,EAAE,MAAM,QAAQ,MAAM;AACnE,SACE,mCACE;AAAA,2BAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,OAAO,CAAC,GAAG,yBAAhE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,iBAAzD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,uBAAC,YAAO,UAAU,SAAS,GAAG,SAAS,MAAM,QAAQ,OAAO,CAAC,GAAG,yBAAhE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OA3BF;AAAA;AAAA;AAAA;AAAA,SA4BA;AAEJ;AAEA,eAAe;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "bf779e3e58612ba1d2182e5f1eb747e25b54ec23"
  },
  "D:/RS school projects/react-ts-class-comp/src/redux/query/apiSlice.ts": {
    "path": "D:/RS school projects/react-ts-class-comp/src/redux/query/apiSlice.ts",
    "statementMap": {
      "0": {
        "start": { "line": 2, "column": 24 },
        "end": { "line": 20, "column": 2 }
      },
      "1": {
        "start": { "line": 5, "column": 27 },
        "end": { "line": 19, "column": 3 }
      },
      "2": {
        "start": { "line": 8, "column": 8 },
        "end": { "line": 10, "column": 9 }
      },
      "3": {
        "start": { "line": 9, "column": 10 },
        "end": { "line": 9, "column": 39 }
      },
      "4": {
        "start": { "line": 11, "column": 8 },
        "end": { "line": 11, "column": 56 }
      },
      "5": {
        "start": { "line": 16, "column": 8 },
        "end": { "line": 16, "column": 31 }
      },
      "6": {
        "start": { "line": 21, "column": 60 },
        "end": { "line": 21, "column": 68 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 5, "column": 13 },
          "end": { "line": 5, "column": 14 }
        },
        "loc": {
          "start": { "line": 5, "column": 27 },
          "end": { "line": 19, "column": 3 }
        },
        "line": 5
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": { "line": 7, "column": 13 },
          "end": { "line": 7, "column": 14 }
        },
        "loc": {
          "start": { "line": 7, "column": 48 },
          "end": { "line": 12, "column": 7 }
        },
        "line": 7
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": { "line": 15, "column": 13 },
          "end": { "line": 15, "column": 14 }
        },
        "loc": {
          "start": { "line": 15, "column": 23 },
          "end": { "line": 17, "column": 7 }
        },
        "line": 15
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": { "line": 8, "column": 8 },
          "end": { "line": 10, "column": 9 }
        },
        "type": "if",
        "locations": [
          {
            "start": { "line": 8, "column": 8 },
            "end": { "line": 10, "column": 9 }
          },
          { "start": {}, "end": {} }
        ],
        "line": 8
      }
    },
    "s": { "0": 1, "1": 1, "2": 0, "3": 0, "4": 0, "5": 0, "6": 1 },
    "f": { "0": 1, "1": 0, "2": 0 },
    "b": { "0": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/redux/query/apiSlice.ts"
      ],
      "sourcesContent": [
        "import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2' }),\r\n  endpoints: (builder) => ({\r\n    getBerries: builder.query({\r\n      query: ({ offset, limit, searchTerm }: { offset: number, limit: number, searchTerm: string }) => {\r\n        if (searchTerm) {\r\n          return `berry/${searchTerm}`;\r\n        }\r\n        return `berry/?offset=${offset}&limit=${limit}`;\r\n      },\r\n    }),\r\n    getBerryById: builder.query({\r\n      query: (name: string) => {\r\n        return `berry/${name}`;\r\n      }\r\n    })\r\n  }),\r\n});\r\n\r\nexport const { useGetBerriesQuery, useGetBerryByIdQuery } = apiSlice;\r\n"
      ],
      "mappings": "AAAA,SAAS,WAAW,sBAAsB;AAEnC,aAAM,WAAW,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,WAAW,eAAe,EAAE,SAAS,4BAA4B,CAAC;AAAA,EAClE,WAAW,CAAC,aAAa;AAAA,IACvB,YAAY,QAAQ,MAAM;AAAA,MACxB,OAAO,CAAC,EAAE,QAAQ,OAAO,WAAW,MAA6D;AAC/F,YAAI,YAAY;AACd,iBAAO,SAAS,UAAU;AAAA,QAC5B;AACA,eAAO,iBAAiB,MAAM,UAAU,KAAK;AAAA,MAC/C;AAAA,IACF,CAAC;AAAA,IACD,cAAc,QAAQ,MAAM;AAAA,MAC1B,OAAO,CAAC,SAAiB;AACvB,eAAO,SAAS,IAAI;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,EACH;AACF,CAAC;AAEM,aAAM,EAAE,oBAAoB,qBAAqB,IAAI;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "a80c72c5ab700f1137e154131a27998fcb21663a"
  },
  "D:/RS school projects/react-ts-class-comp/src/redux/hooks/hooks.ts": {
    "path": "D:/RS school projects/react-ts-class-comp/src/redux/hooks/hooks.ts",
    "statementMap": {
      "0": {
        "start": { "line": 2, "column": 30 },
        "end": { "line": 2, "column": 49 }
      },
      "1": {
        "start": { "line": 2, "column": 36 },
        "end": { "line": 2, "column": 49 }
      },
      "2": {
        "start": { "line": 3, "column": 30 },
        "end": { "line": 3, "column": 41 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 2, "column": 30 },
          "end": { "line": 2, "column": 31 }
        },
        "loc": {
          "start": { "line": 2, "column": 36 },
          "end": { "line": 2, "column": 49 }
        },
        "line": 2
      }
    },
    "branchMap": {},
    "s": { "0": 1, "1": 4, "2": 1 },
    "f": { "0": 4 },
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/redux/hooks/hooks.ts"
      ],
      "sourcesContent": [
        "import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from '../store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"
      ],
      "mappings": "AAAA,SAA+B,aAAa,mBAAmB;AAGxD,aAAM,iBAAiB,MAAM,YAAyB;AACtD,aAAM,iBAAkD;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "dba5be97357cd18f066e6c2021f7126d4c5d6233"
  },
  "D:/RS school projects/react-ts-class-comp/src/redux/slices/selectedItemsSlice.ts": {
    "path": "D:/RS school projects/react-ts-class-comp/src/redux/slices/selectedItemsSlice.ts",
    "statementMap": {
      "0": {
        "start": { "line": 2, "column": 21 },
        "end": { "line": 4, "column": 1 }
      },
      "1": {
        "start": { "line": 5, "column": 34 },
        "end": { "line": 23, "column": 2 }
      },
      "2": {
        "start": { "line": 10, "column": 20 },
        "end": { "line": 10, "column": 77 }
      },
      "3": {
        "start": { "line": 10, "column": 47 },
        "end": { "line": 10, "column": 76 }
      },
      "4": {
        "start": { "line": 11, "column": 6 },
        "end": { "line": 17, "column": 7 }
      },
      "5": {
        "start": { "line": 12, "column": 8 },
        "end": { "line": 14, "column": 10 }
      },
      "6": {
        "start": { "line": 13, "column": 20 },
        "end": { "line": 13, "column": 49 }
      },
      "7": {
        "start": { "line": 16, "column": 8 },
        "end": { "line": 16, "column": 41 }
      },
      "8": {
        "start": { "line": 20, "column": 6 },
        "end": { "line": 20, "column": 23 }
      },
      "9": {
        "start": { "line": 24, "column": 43 },
        "end": { "line": 24, "column": 69 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 9, "column": 16 },
          "end": { "line": 9, "column": 17 }
        },
        "loc": {
          "start": { "line": 9, "column": 35 },
          "end": { "line": 18, "column": 5 }
        },
        "line": 9
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": { "line": 10, "column": 37 },
          "end": { "line": 10, "column": 38 }
        },
        "loc": {
          "start": { "line": 10, "column": 47 },
          "end": { "line": 10, "column": 76 }
        },
        "line": 10
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": { "line": 13, "column": 10 },
          "end": { "line": 13, "column": 11 }
        },
        "loc": {
          "start": { "line": 13, "column": 20 },
          "end": { "line": 13, "column": 49 }
        },
        "line": 13
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": { "line": 19, "column": 17 },
          "end": { "line": 19, "column": 18 }
        },
        "loc": {
          "start": { "line": 19, "column": 28 },
          "end": { "line": 21, "column": 5 }
        },
        "line": 19
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": { "line": 11, "column": 6 },
          "end": { "line": 17, "column": 7 }
        },
        "type": "if",
        "locations": [
          {
            "start": { "line": 11, "column": 6 },
            "end": { "line": 17, "column": 7 }
          },
          {
            "start": { "line": 15, "column": 13 },
            "end": { "line": 17, "column": 7 }
          }
        ],
        "line": 11
      }
    },
    "s": {
      "0": 1,
      "1": 1,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 1
    },
    "f": { "0": 0, "1": 0, "2": 0, "3": 0 },
    "b": { "0": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/redux/slices/selectedItemsSlice.ts"
      ],
      "sourcesContent": [
        "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { apiSlice } from '../query/apiSlice';\r\n\r\ninterface ItemType {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface SelectedItemsSlice {\r\n  items: ItemType[];\r\n}\r\n\r\nconst initialState: SelectedItemsSlice = {\r\n  items: [],\r\n};\r\n\r\nexport const selectedItemsSlice = createSlice({\r\n  name: 'selectedItems',\r\n  initialState,\r\n  reducers: {\r\n    selectItem: (state, action: PayloadAction<ItemType>) => {\r\n      const exist = state.items.find((item) => item.id === action.payload.id);\r\n      if (exist) {\r\n        state.items = state.items.filter(\r\n          (item) => item.id !== action.payload.id,\r\n        );\r\n      } else {\r\n        state.items.push(action.payload);\r\n      }\r\n    },\r\n    unselectAll: (state) => {\r\n      state.items = []\r\n    }\r\n  }\r\n});\r\n\r\nexport const {selectItem, unselectAll} = selectedItemsSlice.actions;\r\nexport default selectedItemsSlice.reducer;\r\n"
      ],
      "mappings": "AAAA,SAAS,mBAAkC;AAY3C,MAAM,eAAmC;AAAA,EACvC,OAAO,CAAC;AACV;AAEO,aAAM,qBAAqB,YAAY;AAAA,EAC5C,MAAM;AAAA,EACN;AAAA,EACA,UAAU;AAAA,IACR,YAAY,CAAC,OAAO,WAAoC;AACtD,YAAM,QAAQ,MAAM,MAAM,KAAK,CAAC,SAAS,KAAK,OAAO,OAAO,QAAQ,EAAE;AACtE,UAAI,OAAO;AACT,cAAM,QAAQ,MAAM,MAAM;AAAA,UACxB,CAAC,SAAS,KAAK,OAAO,OAAO,QAAQ;AAAA,QACvC;AAAA,MACF,OAAO;AACL,cAAM,MAAM,KAAK,OAAO,OAAO;AAAA,MACjC;AAAA,IACF;AAAA,IACA,aAAa,CAAC,UAAU;AACtB,YAAM,QAAQ,CAAC;AAAA,IACjB;AAAA,EACF;AACF,CAAC;AAEM,aAAM,EAAC,YAAY,YAAW,IAAI,mBAAmB;AAC5D,eAAe,mBAAmB;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "4664eb76ed876e684d020ccec1306d3b721b2995"
  },
  "D:/RS school projects/react-ts-class-comp/src/components/result/result.tsx": {
    "path": "D:/RS school projects/react-ts-class-comp/src/components/result/result.tsx",
    "statementMap": {
      "0": {
        "start": { "line": 9, "column": 15 },
        "end": { "line": 121, "column": 1 }
      },
      "1": {
        "start": { "line": 10, "column": 23 },
        "end": { "line": 10, "column": 56 }
      },
      "2": {
        "start": { "line": 11, "column": 19 },
        "end": { "line": 11, "column": 32 }
      },
      "3": {
        "start": { "line": 12, "column": 25 },
        "end": { "line": 12, "column": 42 }
      },
      "4": {
        "start": { "line": 13, "column": 22 },
        "end": { "line": 13, "column": 67 }
      },
      "5": {
        "start": { "line": 14, "column": 26 },
        "end": { "line": 14, "column": 47 }
      },
      "6": {
        "start": { "line": 15, "column": 19 },
        "end": { "line": 15, "column": 35 }
      },
      "7": {
        "start": { "line": 16, "column": 24 },
        "end": { "line": 16, "column": 76 }
      },
      "8": {
        "start": { "line": 16, "column": 50 },
        "end": { "line": 16, "column": 75 }
      },
      "9": {
        "start": { "line": 17, "column": 17 },
        "end": { "line": 17, "column": 32 }
      },
      "10": {
        "start": { "line": 18, "column": 37 },
        "end": { "line": 22, "column": 4 }
      },
      "11": {
        "start": { "line": 23, "column": 2 },
        "end": { "line": 25, "column": 23 }
      },
      "12": {
        "start": { "line": 24, "column": 4 },
        "end": { "line": 24, "column": 30 }
      },
      "13": {
        "start": { "line": 26, "column": 31 },
        "end": { "line": 28, "column": 3 }
      },
      "14": {
        "start": { "line": 27, "column": 4 },
        "end": { "line": 27, "column": 62 }
      },
      "15": {
        "start": { "line": 29, "column": 21 },
        "end": { "line": 29, "column": 73 }
      },
      "16": {
        "start": { "line": 29, "column": 29 },
        "end": { "line": 29, "column": 73 }
      },
      "17": {
        "start": { "line": 29, "column": 58 },
        "end": { "line": 29, "column": 72 }
      },
      "18": {
        "start": { "line": 30, "column": 25 },
        "end": { "line": 37, "column": 3 }
      },
      "19": {
        "start": { "line": 31, "column": 23 },
        "end": { "line": 31, "column": 122 }
      },
      "20": {
        "start": { "line": 31, "column": 85 },
        "end": { "line": 31, "column": 110 }
      },
      "21": {
        "start": { "line": 32, "column": 23 },
        "end": { "line": 32, "column": 44 }
      },
      "22": {
        "start": { "line": 33, "column": 17 },
        "end": { "line": 33, "column": 44 }
      },
      "23": {
        "start": { "line": 34, "column": 4 },
        "end": { "line": 34, "column": 42 }
      },
      "24": {
        "start": { "line": 35, "column": 4 },
        "end": { "line": 35, "column": 73 }
      },
      "25": {
        "start": { "line": 36, "column": 4 },
        "end": { "line": 36, "column": 17 }
      },
      "26": {
        "start": { "line": 38, "column": 2 },
        "end": { "line": 42, "column": 11 }
      },
      "27": {
        "start": { "line": 38, "column": 13 },
        "end": { "line": 42, "column": 11 }
      },
      "28": {
        "start": { "line": 43, "column": 2 },
        "end": { "line": 120, "column": 11 }
      },
      "29": {
        "start": { "line": 44, "column": 129 },
        "end": { "line": 70, "column": 12 }
      },
      "30": {
        "start": { "line": 50, "column": 26 },
        "end": { "line": 50, "column": 50 }
      },
      "31": {
        "start": { "line": 101, "column": 56 },
        "end": { "line": 101, "column": 79 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 9, "column": 15 },
          "end": { "line": 9, "column": 16 }
        },
        "loc": {
          "start": { "line": 9, "column": 21 },
          "end": { "line": 121, "column": 1 }
        },
        "line": 9
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": { "line": 16, "column": 39 },
          "end": { "line": 16, "column": 40 }
        },
        "loc": {
          "start": { "line": 16, "column": 50 },
          "end": { "line": 16, "column": 75 }
        },
        "line": 16
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": { "line": 23, "column": 12 },
          "end": { "line": 23, "column": 13 }
        },
        "loc": {
          "start": { "line": 23, "column": 18 },
          "end": { "line": 25, "column": 3 }
        },
        "line": 23
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": { "line": 26, "column": 31 },
          "end": { "line": 26, "column": 32 }
        },
        "loc": {
          "start": { "line": 26, "column": 42 },
          "end": { "line": 28, "column": 3 }
        },
        "line": 26
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": { "line": 29, "column": 21 },
          "end": { "line": 29, "column": 22 }
        },
        "loc": {
          "start": { "line": 29, "column": 29 },
          "end": { "line": 29, "column": 73 }
        },
        "line": 29
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": { "line": 29, "column": 48 },
          "end": { "line": 29, "column": 49 }
        },
        "loc": {
          "start": { "line": 29, "column": 58 },
          "end": { "line": 29, "column": 72 }
        },
        "line": 29
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": {
          "start": { "line": 30, "column": 25 },
          "end": { "line": 30, "column": 26 }
        },
        "loc": {
          "start": { "line": 30, "column": 31 },
          "end": { "line": 37, "column": 3 }
        },
        "line": 30
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": {
          "start": { "line": 31, "column": 75 },
          "end": { "line": 31, "column": 76 }
        },
        "loc": {
          "start": { "line": 31, "column": 85 },
          "end": { "line": 31, "column": 110 }
        },
        "line": 31
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": {
          "start": { "line": 44, "column": 100 },
          "end": { "line": 44, "column": 101 }
        },
        "loc": {
          "start": { "line": 44, "column": 129 },
          "end": { "line": 70, "column": 12 }
        },
        "line": 44
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": {
          "start": { "line": 50, "column": 20 },
          "end": { "line": 50, "column": 21 }
        },
        "loc": {
          "start": { "line": 50, "column": 26 },
          "end": { "line": 50, "column": 50 }
        },
        "line": 50
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": {
          "start": { "line": 101, "column": 50 },
          "end": { "line": 101, "column": 51 }
        },
        "loc": {
          "start": { "line": 101, "column": 56 },
          "end": { "line": 101, "column": 79 }
        },
        "line": 101
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": { "line": 13, "column": 31 },
          "end": { "line": 13, "column": 62 }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": { "line": 13, "column": 31 },
            "end": { "line": 13, "column": 55 }
          },
          {
            "start": { "line": 13, "column": 59 },
            "end": { "line": 13, "column": 62 }
          }
        ],
        "line": 13
      },
      "1": {
        "loc": {
          "start": { "line": 38, "column": 2 },
          "end": { "line": 42, "column": 11 }
        },
        "type": "if",
        "locations": [
          {
            "start": { "line": 38, "column": 2 },
            "end": { "line": 42, "column": 11 }
          },
          { "start": {}, "end": {} }
        ],
        "line": 38
      },
      "2": {
        "loc": {
          "start": { "line": 44, "column": 4 },
          "end": { "line": 82, "column": 12 }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": { "line": 44, "column": 33 },
            "end": { "line": 78, "column": 12 }
          },
          {
            "start": { "line": 78, "column": 31 },
            "end": { "line": 82, "column": 12 }
          }
        ],
        "line": 44
      },
      "3": {
        "loc": {
          "start": { "line": 44, "column": 59 },
          "end": { "line": 74, "column": 12 }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": { "line": 44, "column": 83 },
            "end": { "line": 70, "column": 13 }
          },
          {
            "start": { "line": 70, "column": 32 },
            "end": { "line": 74, "column": 12 }
          }
        ],
        "line": 44
      },
      "4": {
        "loc": {
          "start": { "line": 92, "column": 4 },
          "end": { "line": 115, "column": 12 }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": { "line": 92, "column": 4 },
            "end": { "line": 92, "column": 28 }
          },
          {
            "start": { "line": 92, "column": 48 },
            "end": { "line": 115, "column": 12 }
          }
        ],
        "line": 92
      }
    },
    "s": {
      "0": 1,
      "1": 5,
      "2": 4,
      "3": 4,
      "4": 4,
      "5": 4,
      "6": 4,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    "f": {
      "0": 5,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    "b": { "0": [4, 4], "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0] },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/components/result/result.tsx"
      ],
      "sourcesContent": [
        "import React, { useEffect, useState } from 'react';\nimport { useLocalStorage } from '@uidotdev/usehooks';\nimport { NavLink, useNavigate, useSearchParams } from 'react-router-dom';\nimport Pagination from '../pagination/pagination';\nimport { useGetBerriesQuery } from '../../redux/query/apiSlice';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { selectItem, unselectAll } from '../../redux/slices/selectedItemsSlice';\n\ninterface Berry {\n  name: string;\n  url: string;\n}\n\nconst Result: React.FC = () => {\n  const [searchTerm] = useLocalStorage<string>('searchTerm', '');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get('page') || '1', 10);\n  const [page, setPage] = useState(initialPage);\n  const dispatch = useAppDispatch();\n  const selectedItems = useAppSelector((state) => state.selectedItems.items);\n\n  const offset = (page - 1) * 10;\n  const { data, error, isLoading } = useGetBerriesQuery({\n    offset,\n    limit: 10,\n    searchTerm,\n  });\n\n  useEffect(() => {\n    navigate(`?page=${page}`);\n  }, [page, navigate]);\n\n  const handleCheckboxChange = (berry: Berry) => {\n    dispatch(selectItem({ id: berry.url, name: berry.name }));\n  };\n\n  const isSelected = (id: string) =>\n    selectedItems.some((item) => item.id === id);\n\n  const handleDownload = () => {\n    const csvContent =\n      'data:text/csv;charset=utf-8,' +\n      + selectedItems.map((item) => `${item.id},${item.name}`).join('\\n');\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', `${selectedItems.length}_berries.csv`);\n    link.click();\n  };\n\n  if (error) return <div>Ooops</div>;\n\n  return (\n    <div>\n      {!isLoading ? (\n        <div>\n          {data?.results?.length ? (\n            data.results.map((el: Berry, idx: number) => (\n              <div key={idx}>\n                <input\n                  type=\"checkbox\"\n                  checked={isSelected(el.url)}\n                  onChange={() => handleCheckboxChange(el)}\n                />\n                <NavLink to={`/SearchedItem/${el.name}`}>{el.name}</NavLink>\n              </div>\n            ))\n          ) : (\n            <NavLink to={`/SearchedItem/${data.name}`}>{data.name}</NavLink>\n          )}\n        </div>\n      ) : (\n        <div style={{ marginTop: '20px' }}>Loading...</div>\n      )}\n      <div style={{ marginTop: '20px' }}>\n        <Pagination page={page} setPage={setPage} />\n      </div>\n      {selectedItems.length > 0 && (\n        <div className=\"flyout\">\n          <p>{selectedItems.length} items are selected</p>\n          <button onClick={() => dispatch(unselectAll())}>Unselect all</button>\n          <button onClick={handleDownload}>Download</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Result;\n"
      ],
      "mappings": "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",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "b666b0a9dc46016dff655b918c37724d390d20f7"
  },
  "D:/RS school projects/react-ts-class-comp/src/pages/SearchPage.tsx": {
    "path": "D:/RS school projects/react-ts-class-comp/src/pages/SearchPage.tsx",
    "statementMap": {
      "0": {
        "start": { "line": 5, "column": 19 },
        "end": { "line": 37, "column": 1 }
      },
      "1": {
        "start": { "line": 6, "column": 2 },
        "end": { "line": 36, "column": 11 }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": { "line": 5, "column": 19 },
          "end": { "line": 5, "column": 20 }
        },
        "loc": {
          "start": { "line": 5, "column": 25 },
          "end": { "line": 37, "column": 1 }
        },
        "line": 5
      }
    },
    "branchMap": {},
    "s": { "0": 1, "1": 3 },
    "f": { "0": 3 },
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "D:/RS school projects/react-ts-class-comp/src/pages/SearchPage.tsx"
      ],
      "sourcesContent": [
        "import React from 'react';\nimport Search from '../components/search/search';\nimport Result from '../components/result/result';\nimport { Outlet } from 'react-router-dom';\n\nconst SearchPage: React.FC = () => {\n  return (\n    <>\n      <div style={{ display: 'flex', gap: '50px', justifyContent: 'center' }}>\n        <div style={{ width: '260px' }}>\n          <Search />\n          <Result />\n        </div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default SearchPage;\n"
      ],
      "mappings": "AAOI,mBAGM,cAHN;AANJ,OAAO,YAAY;AACnB,OAAO,YAAY;AACnB,SAAS,cAAc;AAEvB,MAAM,aAAuB,MAAM;AACjC,SACE,mCACE,iCAAC,SAAI,OAAO,EAAE,SAAS,QAAQ,KAAK,QAAQ,gBAAgB,SAAS,GACnE;AAAA,2BAAC,SAAI,OAAO,EAAE,OAAO,QAAQ,GAC3B;AAAA,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,uBAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,uBAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OALV;AAAA;AAAA;AAAA;AAAA,SAMA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,eAAe;",
      "names": []
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "d0abd69496f66ab1e13324ce232baeb659f8ce4f"
  }
}
